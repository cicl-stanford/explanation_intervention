knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
install.packages("reshape")
install.packages("janitor")
install.packages("DT")
install.packages("Hmisc")
install.packages("broom")
install.packages("tidyverse")
install.packages("MuMIn")
install.packages("tidyverse")
install.packages("simr")
install.packages("Publish")
install.packages("ggpubr")
install.packages("emmeans")
install.packages("ggpubr")
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("reshape") # variety of methods for reshaping data prior
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("tidyverse") # for data wrangling, visualization, etc.
library("lme4") # for fitting and analyzing mixed models
library("MuMIn") # for calculating effect sizes
library("pwr") #for power analysis
library("simr") # for power analysis
library("ggpubr") # for publication Ready Plots
library("emmeans") # for post hoc tests
library("brms")        # for Bayesian regression modeling
library("tidybayes")   # for Bayesian regression modeling
# set ggplot theme
theme_set(
theme_classic()
)
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "pressbutton_positivecondition-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "pressbutton_positivecondition-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data4 <- merge(df.responses, df.participants, by="workerid")
df.exp2 <- df.data4
View(df.exp2)
df.exp2 <- df.data4 %>%
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(CausalStructure  =
case_when(
str_detect(proliferate.condition, "Condition_1") & str_detect(index, "response_1") ~ "Conjunctive",
str_detect(proliferate.condition, "Condition_1") & str_detect(index, "response_2") ~ "Disjunctive",
str_detect(proliferate.condition, "Condition_2") & str_detect(index, "response_1") ~ "Disjunctive",
str_detect(proliferate.condition, "Condition_2") & str_detect(index, "response_2") ~ "Conjunctive"))%>%
mutate(Order =
case_when(
str_detect(proliferate.condition, "Condition_1") ~ "conjunctive first",
str_detect(proliferate.condition, "Condition_2") ~ "disjunctive first"))%>%
mutate(ResponseType =
case_when(
str_detect(index, "explanation") ~ "explanation",
str_detect(index, "intervention")  ~ "intervention"))%>%
select(-index) %>%
spread(ResponseType, response) %>%
mutate(CausalStructure= factor(CausalStructure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(explanation = recode (explanation,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(intervention = recode (intervention,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(abnormal_explanation =
case_when(
explanation == "abnormal" ~ "abnormal",
explanation != "abnormal"~ "other")) %>%
mutate(normal_explanation =
case_when(
explanation == "normal" ~ "normal",
explanation != "normal"~ "other")) %>%
mutate(nopreference_explanation =
case_when(
explanation == "no preference" ~ "no preference",
explanation != "no preference"~ "other")) %>%
mutate(abnormal_intervention =
case_when(
intervention== "abnormal" ~ "abnormal",
intervention!= "abnormal"~ "other")) %>%
mutate(normal_intervention  =
case_when(
intervention  == "normal" ~ "normal",
intervention  != "normal"~ "other")) %>%
mutate(nopreference_intervention  =
case_when(
intervention== "no preference" ~ "no preference",
intervention!= "no preference"~ "other"))
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- df.exp4 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
Fig <- df.exp4 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
Fig <- df.exp2 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
Fig <- df.exp2 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
#facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
View(df.exp2)
Fig <- df.exp2 %>%
ggplot(aes(x=CausalStructure, y=explanation, group = explanation, fill = explanation)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
#facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
#df.exp2subset<-df.exp2 %>%
#filter(Order == "disjunctive first")
FigExplanations<- ggplot(df.exp2subset, aes(x=explanation, group = CausalStructure))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of  explanation responses") +
facet_wrap(~CausalStructure)+
theme_bw()+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14),
strip.text = element_text(color="black", size = 12))
#df.exp2subset<-df.exp2 %>%
#filter(Order == "disjunctive first")
FigExplanations<- ggplot(df.exp2, aes(x=explanation, group = CausalStructure))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of  explanation responses") +
facet_wrap(~CausalStructure)+
theme_bw()+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14),
strip.text = element_text(color="black", size = 12))
FigExplanations
#df.exp2subset<-df.exp2 %>%
# filter(Order == "disjunctive first")
FigIntervention<-df.exp2 %>%
ggplot(aes(x=intervention, group = CausalStructure))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of  intervention responses") +
facet_wrap(~CausalStructure)+
theme_bw()+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14),
strip.text = element_text(color="black", size = 12))
FigIntervention
#df.exp2subset<-df.exp2 %>%
#filter(Order == "disjunctive first")
FigExplanations<- ggplot(df.exp2, aes(x=explanation, group = CausalStructure))+
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
coord_cartesian(ylim = c(0,1)) +
scale_y_continuous(labels=scales::percent_format(accuracy = 1), breaks = seq(0, 1, by=0.20)) +
ylab("proportion of  explanation responses") +
facet_wrap(~CausalStructure)+
facet_grid(~proliferate.condition)+
theme_bw()+
theme(legend.position= "none")+
theme(
axis.text.x = element_text(angle = 20, hjust = 1, color="black", size = 14),
strip.text = element_text(color="black", size = 12))
FigExplanations
