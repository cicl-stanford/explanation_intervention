df <- matrix(0, ncol = 8, nrow = 100)
df.data <- data.frame(df)
df.data$X1 <- rnorm(n = 100, mean = 20, sd = 15);
df.data$X2 <- rnorm(n = 100, mean = 80, sd = 15);
df.data$X3 <- rnorm(n = 100, mean = 100, sd = 15);
df.data$X4 <- rnorm(n = 100, mean = 100, sd = 15);
df.data$X5 <- rnorm(n = 100, mean = 0, sd = 15);
df.data$X6 <- rnorm(n = 100, mean = 0, sd = 15);
df.data$X7 <- rnorm(n = 100, mean = 20, sd = 15);
df.data$X8 <- rnorm(n = 100, mean = 80, sd = 15);
df.data <- df.data %>%
rename(
"Pos_Conj_80" = `X1`,
"Pos_Conj_20" = `X2`,
"Pos_Disj_80" = `X3`,
"Pos_Disj_20" = `X4`,
"Neg_Conj_80" = `X5`,
"Neg_Conj_20" = `X6`,
"Neg_Disj_80" = `X7`,
"Neg_Disj_20" = `X8`
)
df.data$ID <- 1:nrow(df.data)
sim.df <- df.data %>%
gather("index", "rating", -ID)%>%
mutate(Structure  =
case_when(
str_detect(index, "_Conj_") ~ "Conjunctive",
str_detect(index, "_Disj_") ~ "Disjunctive"
)) %>%
mutate(Outcome  =
case_when(
str_detect(index, "Pos_") ~ "Positive",
str_detect(index, "Neg_") ~ "Negative"
)) %>%
mutate(Switch =
case_when(
str_detect(index, "_80") ~ "80",
str_detect(index, "_20") ~ "20"
)) %>%
mutate(Structure= factor(Structure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(Outcome= factor(Outcome, levels=c("Negative", "Positive"))) %>%
mutate(Switch= factor(Switch, levels=c("20", "80")))
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- sim.df %>%
ggplot(aes(x=Structure, y=rating, group = Switch, fill = Switch)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- sim.df %>%
ggplot(aes(x=Structure, y=rating, group = Switch, fill = Switch)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "explanation_selection_probablity_estimates-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
library("reshape") # variety of methods for reshaping data prior
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("tidyverse") # for data wrangling, visualization, etc.
library("lme4") # for fitting and analyzing mixed models
library("MuMIn") # for calculating effect sizes
library("pwr") #for power analysis
library("simr") # for power analysis
library("ggpubr") # for publication Ready Plots
library("emmeans") # for post hoc tests
library("brms")        # for Bayesian regression modeling
library("tidybayes")   # for Bayesian regression modeling
# set ggplot theme
theme_set(
theme_classic()
)
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "explanation_selection_probablity_estimates-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "explanation_valence_probablity_estimates-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_valence_probablity_estimates-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data2 <- merge(df.responses, df.participants, by="workerid")
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "explanation_valence_probablity_estimates-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_valence_probablity_estimates-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data2 <- merge(df.responses, df.participants, by="workerid")
###Experiment 4
#### Read in Data
df.responses = read.csv(file = "explanation_valence_probablity_estimates-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_valence_probablity_estimates-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data4 <- merge(df.responses, df.participants, by="workerid")
View(df.data4)
df.exp4 <- df.data4 %>%
-c(1)
View(df.data4)
df.exp4 <- df.data4 %>%
-filter(workderid=='1')
df.exp4 <- df.data4 %>%
-filter(workderid=='2104')
df.exp4 <- df.data4 %>%
-filter(workerid==2104)
df.exp4 <- df.data4
View(df.exp4)
df.exp4 <- df.data4 %>%
-filter(workerid=="2104")
df.exp4 <- df.data4 %>%
-filter(workerid ==2104)
View(df.exp4)
df.exp4 <- df.data4 %>%
-filter(proliferate.condition == Condition_1)
df.exp4 <- df.data4 %>%
#-filter(proliferate.condition == Condition_1)
#-filter(workerid ==2104)
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))
df.exp4 <- df.data4 %>%
filter(workerid !=2104)
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))
View(df.exp4)
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp" | "cn") ~ "conjunctive",
str_detect(index, "dp" | "dn") ~ "disjunctive"))%>%
mutate(Outcome =
case_when(
str_detect(index, "cp" | "dp") ~ "positive",
str_detect(index, "cn" | "dn") ~ "negative"))
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp_" | "cn_") ~ "conjunctive",
str_detect(index, "dp_" | "dn_") ~ "disjunctive"))
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp_") | str_detect(index, "cn_") ~ "conjunctive"))
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp_") | str_detect(index, "cn_") ~ "conjunctive",
str_detect(index, "dp_") | str_detect(index, "dn_") ~ "disjunctive"))%>%
mutate(Outcome =
case_when(
str_detect(index, "cp_") | str_detect(index, "dp_") ~ "positive",
str_detect(index, "cn_") | str_detect(index, "dn_") ~ "negative"))
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp_") | str_detect(index, "cn_") ~ "conjunctive",
str_detect(index, "dp_") | str_detect(index, "dn_") ~ "disjunctive"))%>%
mutate(Outcome =
case_when(
str_detect(index, "cp_") | str_detect(index, "dp_") ~ "positive",
str_detect(index, "cn_") | str_detect(index, "dn_") ~ "negative"))%>%
mutate(ResponseType =
case_when(
str_detect(index, "one_") ~ "probability_20",
str_detect(index, "two_") ~ "probablity_80"))
df.exp4 <- df.data4 %>%
filter(workerid !=2104) %>% #remove empty row
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(Condition  =
case_when(
str_detect(proliferate.condition, "Condition_1")  ~ "CP, DP, CN, DN",
str_detect(proliferate.condition, "Condition_2") ~ "DP, CP, DN, CN",
str_detect(proliferate.condition, "Condition_3") ~ "CN, DN, CP, DP",
str_detect(proliferate.condition, "Condition_4") ~ "DN, CN, DP, CP"))%>%
mutate(CausalStructure =
case_when(
str_detect(index, "cp_") | str_detect(index, "cn_") ~ "conjunctive",
str_detect(index, "dp_") | str_detect(index, "dn_") ~ "disjunctive"))%>%
mutate(Outcome =
case_when(
str_detect(index, "cp_") | str_detect(index, "dp_") ~ "positive",
str_detect(index, "cn_") | str_detect(index, "dn_") ~ "negative"))%>%
mutate(ResponseType =
case_when(
str_detect(index, "one_") ~ "probability_20",
str_detect(index, "two_") ~ "probablity_80"))%>%
mutate(CausalStructure= factor(CausalStructure, levels=c("conjunctive", "disjunctive"))) %>%
mutate(Outcome= factor(Outcome, levels=c("positive", "negative")))
Fig <- exp4.df %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
Fig <- df.exp4 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- df.exp4 %>%
ggplot(aes(x=CausalStructure, y=response, group = ResponseType, fill = ResponseType)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
knitr::opts_chunk$set(echo = TRUE)
library("pwr")
library("car")
library("brms")
library("knitr")       # for RMarkdown commands
library("kableExtra")  # for nice tables
library("emmeans")
library("lme4")
library("tidybayes")
library("tidyverse")
#df.data<-data.frame()
df <- matrix(0, ncol = 8, nrow = 100)
df.data <- data.frame(df)
df.data$X1 <- rnorm(n = 100, mean = 20, sd = 15);
df.data$X2 <- rnorm(n = 100, mean = 80, sd = 15);
df.data$X3 <- rnorm(n = 100, mean = 100, sd = 15);
df.data$X4 <- rnorm(n = 100, mean = 100, sd = 15);
df.data$X5 <- rnorm(n = 100, mean = 0, sd = 15);
df.data$X6 <- rnorm(n = 100, mean = 0, sd = 15);
df.data$X7 <- rnorm(n = 100, mean = 20, sd = 15);
df.data$X8 <- rnorm(n = 100, mean = 80, sd = 15);
df.data <- df.data %>%
rename(
"Pos_Conj_80" = `X1`,
"Pos_Conj_20" = `X2`,
"Pos_Disj_80" = `X3`,
"Pos_Disj_20" = `X4`,
"Neg_Conj_80" = `X5`,
"Neg_Conj_20" = `X6`,
"Neg_Disj_80" = `X7`,
"Neg_Disj_20" = `X8`
)
df.data$ID <- 1:nrow(df.data)
sim.df <- df.data %>%
gather("index", "rating", -ID)%>%
mutate(Structure  =
case_when(
str_detect(index, "_Conj_") ~ "Conjunctive",
str_detect(index, "_Disj_") ~ "Disjunctive"
)) %>%
mutate(Outcome  =
case_when(
str_detect(index, "Pos_") ~ "Positive",
str_detect(index, "Neg_") ~ "Negative"
)) %>%
mutate(Switch =
case_when(
str_detect(index, "_80") ~ "probablity_20",
str_detect(index, "_20") ~ "probability_80"
)) %>%
mutate(Structure= factor(Structure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(Switch= factor(Switch, levels=c("20", "80")))
sim.df <- df.data %>%
gather("index", "rating", -ID)%>%
mutate(Structure  =
case_when(
str_detect(index, "_Conj_") ~ "Conjunctive",
str_detect(index, "_Disj_") ~ "Disjunctive"
)) %>%
mutate(Outcome  =
case_when(
str_detect(index, "Pos_") ~ "Positive",
str_detect(index, "Neg_") ~ "Negative"
)) %>%
mutate(Switch =
case_when(
str_detect(index, "_80") ~ "probability_20",
str_detect(index, "_20") ~ "probability_80"
)) %>%
mutate(Structure= factor(Structure, levels=c("Conjunctive", "Disjunctive"))) %>%
#mutate(Switch= factor(Switch, levels=c("20", "80")))
sim.df <- df.data %>%
gather("index", "rating", -ID)%>%
mutate(Structure  =
case_when(
str_detect(index, "_Conj_") ~ "Conjunctive",
str_detect(index, "_Disj_") ~ "Disjunctive"
)) %>%
mutate(Outcome  =
case_when(
str_detect(index, "Pos_") ~ "Positive",
str_detect(index, "Neg_") ~ "Negative"
)) %>%
mutate(Switch =
case_when(
str_detect(index, "_80") ~ "probability_20",
str_detect(index, "_20") ~ "probability_80"
)) %>%
mutate(Structure= factor(Structure, levels=c("Conjunctive", "Disjunctive")))
#mutate(Switch= factor(Switch, levels=c("20", "80")))
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- sim.df %>%
ggplot(aes(x=Structure, y=rating, group = Switch, fill = Switch)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
sim.df <- df.data %>%
gather("index", "rating", -ID)%>%
mutate(Structure  =
case_when(
str_detect(index, "_Conj_") ~ "Conjunctive",
str_detect(index, "_Disj_") ~ "Disjunctive"
)) %>%
mutate(Outcome  =
case_when(
str_detect(index, "Pos_") ~ "Positive",
str_detect(index, "Neg_") ~ "Negative"
)) %>%
mutate(Switch =
case_when(
str_detect(index, "_80") ~ "probability_20",
str_detect(index, "_20") ~ "probability_80"
)) %>%
mutate(Structure= factor(Structure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(Outcome= factor(Outcome, levels=c("Positive", "Negative")))
#mutate(Switch= factor(Switch, levels=c("20", "80")))
#### Set Theme
myTheme <-   theme(axis.title.x  = element_blank(),
axis.title.y = element_text(color="black", size = 18, vjust=.9),
axis.text.x = element_text(color="black", size = 16),
axis.text.y = element_text(color="black", size = 18),
strip.text.x = element_text(color="black", size = 16),
legend.text = element_text(color="black", size = 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
# legend.title = element_blank()
)
Fig <- sim.df %>%
ggplot(aes(x=Structure, y=rating, group = Switch, fill = Switch)) +
#coord_cartesian(ylim = c(0,10)) +
#scale_y_continuous(breaks = seq(0, 10, by=1))+
stat_summary(fun = mean, geom = "bar", colour = "black", alpha=0.7, position = "dodge",) +
stat_summary(fun.data = mean_cl_boot, geom = "linerange", width = 1, size=1, position = position_dodge(width = 0.90)) +
#geom_jitter(position = position_jitter(jitter.height = 0.2, jitter.width=0.15), alpha =
#              0.06, colour="black")+
labs( y="Likelihood Rating")+
#scale_fill_brewer(palette="Paired")+
#guides(fill = FALSE, colour = FALSE)+
theme_bw()+
facet_wrap(~Outcome)+
myTheme
theme(axis.text.x = element_text(angle = 15, hjust = 1, color="black", size = 14))
#Show plot
plot(Fig)
ggsave(Fig, file="Fig.png", dpi=400, height = 4, width = 7)
