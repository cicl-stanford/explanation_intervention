knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
df.summary<-df.responses %>%
group_by(CausalStrength) %>%
sum(explanation == intervention)
library("reshape") # variety of methods for reshaping data prior
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("tidyverse") # for data wrangling, visualization, etc.
library("lme4") # for fitting and analyzing mixed models
library("MuMIn") # for calculating effect sizes
library("pwr") #for power analysis
library("simr") # for power analysis
library("ggpubr") # for publication Ready Plots
library("emmeans") # for post hoc tests
library("brms")        # for Bayesian regression modeling
library("tidybayes")   # for Bayesian regression modeling
# set ggplot theme
theme_set(
theme_classic()
)
# set ggplot theme
theme_set(
theme_classic()
)
###Study 1
#### Read in Data
df.responses = read.csv(file = "explanation_valence_full_study_1-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_valence_full_study_1-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data1 <- merge(df.responses, df.participants, by="workerid")
df.exp1 <- df.data1 %>%
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(CausalStructure  =
case_when(
proliferate.condition == "Condition 1" & index ==  "response_1"~ "Conjunctive",
proliferate.condition == "Condition 1" & index ==  "response_2"~ "Disjunctive",
proliferate.condition == "Condition 2" & index ==  "response_1"~ "Disjunctive",
proliferate.condition == "Condition 2" & index ==  "response_2"~ "Conjunctive",
proliferate.condition == "Condition 3" & index ==  "response_1"~ "Conjunctive",
proliferate.condition == "Condition 3" & index ==  "response_2"~ "Disjunctive",
proliferate.condition == "Condition 4" & index ==  "response_1"~ "Disjunctive",
proliferate.condition == "Condition 4" & index ==  "response_2"~ "Conjunctive"))%>%
mutate(Outcome  =
case_when(
proliferate.condition == "Condition 1" & index ==  "response_1"~ "Positive",
proliferate.condition == "Condition 1" & index ==  "response_2"~ "Positive",
proliferate.condition == "Condition 2" & index ==  "response_1"~ "Positive",
proliferate.condition == "Condition 2" & index ==  "response_2"~ "Positive",
proliferate.condition == "Condition 3" & index ==  "response_1"~ "Negative",
proliferate.condition == "Condition 3" & index ==  "response_2"~ "Negative",
proliferate.condition == "Condition 4" & index ==  "response_1"~ "Negative",
proliferate.condition == "Condition 4" & index ==  "response_2"~ "Negative")) %>%
mutate(Outcome= factor(Outcome, levels=c("Positive", "Negative"))) %>%
mutate(CausalStructure= factor(CausalStructure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(response = recode (response,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(abnormal_selection =
case_when(
response == "abnormal" ~ "abnormal",
response != "abnormal"~ "other")) %>%
mutate(normal_selection =
case_when(
response == "normal" ~ "normal",
response != "normal"~ "other")) %>%
mutate(nopreference_selection =
case_when(
response == "no preference" ~ "no preference",
response != "no preference"~ "other"))
contrasts(df.exp1$CausalStructure) = contr.sum(2)
contrasts(df.exp1$Outcome) = contr.sum(2)
View(df.exp1)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("reshape") # variety of methods for reshaping data prior
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("tidyverse") # for data wrangling, visualization, etc.
library("lme4") # for fitting and analyzing mixed models
library("MuMIn") # for calculating effect sizes
library("pwr") #for power analysis
library("simr") # for power analysis
library("ggpubr") # for publication Ready Plots
library("emmeans") # for post hoc tests
library("brms")        # for Bayesian regression modeling
library("tidybayes")   # for Bayesian regression modeling
# set ggplot theme
theme_set(
theme_classic()
)
###Pilot 2
#### Read in Data
df.responses = read.csv(file = "explanation_selection_positive_outcome_study_2-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_selection_positive_outcome_study_2-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data2 <- merge(df.responses, df.participants, by="workerid")
df.exp2 <- df.data2 %>%
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(CausalStructure  =
case_when(
str_detect(proliferate.condition, "Conpos_") & str_detect(index, "response_1") ~ "Conjunctive",
str_detect(proliferate.condition, "Conpos_") & str_detect(index, "response_2") ~ "Disjunctive",
str_detect(proliferate.condition, "Dispos_") & str_detect(index, "response_1") ~ "Disjunctive",
str_detect(proliferate.condition, "Dispos_") & str_detect(index, "response_2") ~ "Conjunctive"))%>%
mutate(Order =
case_when(
str_detect(proliferate.condition, "Conpos_") ~ "conjunctive first",
str_detect(proliferate.condition, "Dispos_") ~ "disjunctive first"))%>%
mutate(ResponseType =
case_when(
str_detect(index, "explanation") ~ "explanation",
str_detect(index, "intervention")  ~ "intervention"))%>%
select(-index) %>%
spread(ResponseType, response) %>%
mutate(CausalStructure= factor(CausalStructure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(explanation = recode (explanation,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(intervention = recode (intervention,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(abnormal_explanation =
case_when(
explanation == "abnormal" ~ "abnormal",
explanation != "abnormal"~ "other")) %>%
mutate(normal_explanation =
case_when(
explanation == "normal" ~ "normal",
explanation != "normal"~ "other")) %>%
mutate(nopreference_explanation =
case_when(
explanation == "no preference" ~ "no preference",
explanation != "no preference"~ "other")) %>%
mutate(abnormal_intervention =
case_when(
intervention== "abnormal" ~ "abnormal",
intervention!= "abnormal"~ "other")) %>%
mutate(normal_intervention  =
case_when(
intervention  == "normal" ~ "normal",
intervention  != "normal"~ "other")) %>%
mutate(nopreference_intervention  =
case_when(
intervention== "no preference" ~ "no preference",
intervention!= "no preference"~ "other"))
View(df.exp2)
df.summary<-df.responses %>%
group_by(CausalStructure) %>%
sum(explanation == intervention)
df.summary<-df.responses %>%
group_by(CausalStructure)
df.summary<-df.exp2%>%
group_by(CausalStructure) %>%
sum(explanation == intervention)
df.summary<-df.exp2%>%
group_by(CausalStructure)
df.summary<-df.exp2%>%
group_by(CausalStructure) %>%
sum(explanation == intervention)
df.summary<-df.exp2%>%
group_by(CausalStructure) %>%
sum(df.exp2$explanation == df.exp2$intervention)
df.summary<-df.exp2%>%
select(CausalStructure =="Conjunctive") %>%
sum(explanation == intervention)
df.summary<-df.exp2%>%
select(CausalStructure =="Conjunctive")
df.summary<-df.exp2%>%
filter(CausalStructure =="Conjunctive")
df.summary<-df.exp2%>%
filter(CausalStructure =="Conjunctive") %>%
sum(explanation == intervention)
df.summary<-df.exp2%>%
group_by(CausalStructure) %>%
summarize(same = sum(explanation == intervention))
View(df.summary)
df.summary<-df.exp2%>%
group_by(Order) %>%
summarize(same = sum(explanation == explanation))
View(df.summary)
df.summary<-df.exp2%>%
spread(CausalStructure, explanation)
View(df.data2)
df.summary<-df.data2%>%
summarize(same_exp = sum(explanation_response_1 == explanation_response_2),
same_int = sum(intervention_response_1 == intervention_response_2))
View(df.summary)
knitr::opts_chunk$set(
comment = "",
results = "hold",
fig.show = "hold")
library("reshape") # variety of methods for reshaping data prior
library("janitor") # for cleaning variable names
library("DT") # for nice tables
library("Hmisc") # for smean function for bootstrapped confidence intervals
library("tidyverse") # for data wrangling, visualization, etc.
library("lme4") # for fitting and analyzing mixed models
library("MuMIn") # for calculating effect sizes
library("pwr") #for power analysis
library("simr") # for power analysis
library("ggpubr") # for publication Ready Plots
library("emmeans") # for post hoc tests
library("brms")        # for Bayesian regression modeling
library("tidybayes")   # for Bayesian regression modeling
# set ggplot theme
theme_set(
theme_classic()
)
###Pilot 2
#### Read in Data
df.responses = read.csv(file = "explanation_selection_positive_outcome_study_2-responses.csv", stringsAsFactors = F, sep = ",") %>%
select(-error)
df.participants <- read.csv(file = "explanation_selection_positive_outcome_study_2-participants.csv", stringsAsFactors = F, sep = ",") %>%
select(-c(proliferate.condition, error))
df.data2 <- merge(df.responses, df.participants, by="workerid")
df.exp2 <- df.data2 %>%
gather("index", "response", -c(workerid, proliferate.condition, age, ethnicity, gender, feedback, race))%>%
mutate(CausalStructure  =
case_when(
str_detect(proliferate.condition, "Conpos_") & str_detect(index, "response_1") ~ "Conjunctive",
str_detect(proliferate.condition, "Conpos_") & str_detect(index, "response_2") ~ "Disjunctive",
str_detect(proliferate.condition, "Dispos_") & str_detect(index, "response_1") ~ "Disjunctive",
str_detect(proliferate.condition, "Dispos_") & str_detect(index, "response_2") ~ "Conjunctive"))%>%
mutate(Order =
case_when(
str_detect(proliferate.condition, "Conpos_") ~ "conjunctive first",
str_detect(proliferate.condition, "Dispos_") ~ "disjunctive first"))%>%
mutate(ResponseType =
case_when(
str_detect(index, "explanation") ~ "explanation",
str_detect(index, "intervention")  ~ "intervention"))%>%
select(-index) %>%
spread(ResponseType, response) %>%
mutate(CausalStructure= factor(CausalStructure, levels=c("Conjunctive", "Disjunctive"))) %>%
mutate(explanation = recode (explanation,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(intervention = recode (intervention,
"orange" = "abnormal",
"blue" = "normal" )) %>%
mutate(abnormal_explanation =
case_when(
explanation == "abnormal" ~ "abnormal",
explanation != "abnormal"~ "other")) %>%
mutate(normal_explanation =
case_when(
explanation == "normal" ~ "normal",
explanation != "normal"~ "other")) %>%
mutate(nopreference_explanation =
case_when(
explanation == "no preference" ~ "no preference",
explanation != "no preference"~ "other")) %>%
mutate(abnormal_intervention =
case_when(
intervention== "abnormal" ~ "abnormal",
intervention!= "abnormal"~ "other")) %>%
mutate(normal_intervention  =
case_when(
intervention  == "normal" ~ "normal",
intervention  != "normal"~ "other")) %>%
mutate(nopreference_intervention  =
case_when(
intervention== "no preference" ~ "no preference",
intervention!= "no preference"~ "other"))
df.exp2b <- df.data2 %>%
select(-c(workerid, age, ethnicity, gender, feedback, race))%>%
mutate(explanation_conjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~explanation_response_1,
str_detect(proliferate.condition, "Dispos_") ~explanation_response_2)) %>%
mutate(explanation_disjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~explanation_response_2,
str_detect(proliferate.condition, "Dispos_") ~explanation_response_1)) %>%
mutate(intervention_conjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~intervention_response_1,
str_detect(proliferate.condition, "Dispos_") ~ intervention_response_2)) %>%
mutate(intervention_disjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~ intervention_response_2,
str_detect(proliferate.condition, "Dispos_") ~ intervention_response_1))
df.summary<-df.exp2b%>%
group_by(explanation_conjunctive, intervention_conjunctive, explanation_disjunctive, intervention_disjunctive) %>%
summarize(n = n()) %>%
mutate(percentage =n/99)
View(df.summary)
df.exp2b <- df.data2 %>%
select(-c(workerid, age, ethnicity, gender, feedback, race))%>%
mutate(explanation_conjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~explanation_response_1,
str_detect(proliferate.condition, "Dispos_") ~explanation_response_2)) %>%
mutate(explanation_disjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~explanation_response_2,
str_detect(proliferate.condition, "Dispos_") ~explanation_response_1)) %>%
mutate(intervention_conjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~intervention_response_1,
str_detect(proliferate.condition, "Dispos_") ~ intervention_response_2)) %>%
mutate(intervention_disjunctive =
case_when(
str_detect(proliferate.condition, "Conpos_") ~ intervention_response_2,
str_detect(proliferate.condition, "Dispos_") ~ intervention_response_1))
df.summary<-df.exp2b%>%
group_by(explanation_conjunctive, intervention_conjunctive, explanation_disjunctive, intervention_disjunctive) %>%
summarize(n = n()) %>%
mutate(percentage =n/97)
View(df.summary)
